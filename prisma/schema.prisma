// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  admin_id String  @unique
  username String
  password String
  isAdmin  Boolean @default(false)
}

model Contact {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  hasDesign     String?
  cost          String?
  schedule      String?
  description   String?
  images        String[]
  knowPlatform  String   @default("알수없음")
  contactPath   String   @default("홈페이지")
  clientCompany String?
  createdAt     DateTime @default(now())
  state         String?  @default("문의")
  pm            String?  @default("미정")
  meterial      String[]
  content       String?
  orderCompany  String?
  note          String?
  client        Client[]

  @@index([pm]) // pm 필드에 인덱스
  @@index([state]) // state 필드에 인덱스
  @@index([clientCompany]) // clientCompany 필드에 인덱스
  @@index([createdAt]) // 날짜 범위 검색용 인덱스
}

model Client {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  name      String?
  phone     String?
  email     String?
  position  String?
  contactId String  @db.ObjectId
  contact   Contact @relation(fields: [contactId], references: [id], onDelete: Cascade)

  @@index([name]) // name 필드에 인덱스
  @@index([phone]) // phone 필드에 인덱스
  @@index([contactId]) // 관계 필드에 인덱스
}

model Portfolio {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  images          String[]
  thumb           String
  blurThumb       String?
  title           String
  description     String
  isRep           Boolean  @default(false)
  category        String[]
  metaTitle       String?
  metaDescription String?
  metaKeywords    String[]
  createdAt       DateTime @default(now())
}

model Attendance {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String
  username  String
  type      String // 'checkin' or 'checkout'
  timestamp DateTime @default(now())
  ip        String

  @@index([userId, type, timestamp])
}
